version: "2.4"
services:
    proxy:
#        image: nginx:alpine
        build:
            context: ./nginx
            dockerfile: Dockerfile
        container_name: proxy

        restart: always
        depends_on:
            - database
            - web
        volumes:
            - ./nginx/logs:/var/log/ngdsainx
            - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
            - ./app/aleksan_site/static:/aleksan_site/static
        networks:
            - proxy
        ports:
            - 8080:80
#            - 8443:443

    web:
        build:
            context: ./app/aleksan_flask
            dockerfile: Dockerfile
        container_name: web
#        env_file:
#            - ./config/secret/.env
        volumes:
            - ./app/aleksan_flask:/aleksan_flask
        working_dir:
            /aleksan_flask

        command: sh -c "ls -la && gunicorn --bind 0.0.0.0:5000 app:app"
        depends_on:
            database:
                condition: service_healthy
        networks:
            - proxy
            - backend
        expose:
            - 5000


    database:
        image: postgres
        container_name: database
        env_file:
            - ./config/secret/.env.database
        restart: always
        healthcheck:
            test: psql --version || exit 1
            interval: 10s
            timeout: 5s
            retries: 5
        volumes:
            - db_data:/var/lib/postgresql/data/
        networks:
            - backend
        expose:
            - 5432


volumes:
    db_data:

networks:
    proxy:
        driver: bridge
    backend:
        driver: bridge